---
- name: 'Ubuntu pre-config'
  import_playbook: default_config.yaml

- name: 'Ruby&Rails'
  import_playbook: rails_config.yaml

- name: 'Nginx'
  import_playbook: webserver_nginx_config.yaml

- name: 'Postgresql'
  import_playbook: database_psql_config.yaml

- hosts: decidim_grp
  name: 'Deploy Decidim'

  tasks: 

    - name: 'Install Decidim dependencies packages'
      apt:
        name:
          - libpq-dev
          - nodejs 
          - imagemagick 
          - libicu-dev
          # Install yarn
      become: true

    - name: 'Install Passenger dependencies packages'
      apt:
          name:
            - dirmngr
            - gnupg 
      become: true

    - name: 'Add Passenger repository key'
      apt_key: keyserver=keyserver.ubuntu.com id=561F9B9CAC40B2F7
      become: true

    - name: 'Add Passenger apt repository'
      apt_repository: repo='deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main'
      become: true

    - name: 'Install Passenger'
      apt: name=libnginx-mod-http-passenger state=latest
      become: true

    - name: 'Add Passenger configuration to Nginx'
      copy:
        dest: '/etc/nginx/conf.d/mod-http-passenger.conf'
        content: |
          passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
          passenger_ruby /home/{{ ansible_user }}/.rbenv/shims/ruby;
      become: true

    #Todo 
      # Install Sidekiq as service
      # Install Redis

    - name: 'Add Decidim config to Nginx'
      blockinfile:
        path: /etc/nginx/sites-available/decidim-cfg
        create: yes
        block: |
          server {
            listen 80;
            listen [::]:80;

            server_name {{ ansible_hostname }}.{{ domain }};
            client_max_body_size 32M;

            passenger_enabled on;

            rails_env    production;
            root         /home/{{ ansible_user }}/decidim-app/public;
          }
      become: true

    - name: 'Enable Nginx config'
      shell: ln -s /etc/nginx/sites-available/decidim-cfg /etc/nginx/sites-enabled/
      args:
        chdir: /etc/nginx/sites-enabled
      become: true

    - name: 'Restart Nginx service'
      service:
        name: nginx
        state: restarted
      become: true

    - name: 'Clone Decidim repository'
      git:
        repo: https://github.com/MoretS/decidim
        dest: /home/{{ ansible_user }}/decidim
        version: develop

    #Todo 
      # Create script to execute end of the process 
        # - bundle install
        # - bundle exec rails db:create
        # - bundle exec rails db:migrate
        # - bundle exec rails db:seed
        # - Change host in database
        # - Precompile assets
        # - Restart nginx 

        # Utiliser des templates au niveau des fichier a créer et à modifier 
